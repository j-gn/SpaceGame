// Generated by CoffeeScript 1.4.0
(function() {

  window.FreeFlightState = (function() {

    function FreeFlightState(app) {
      this.app = app;
      this.camera = app.camera;
      this.scene = app.scene;
      this.renderItems = [];
    }

    FreeFlightState.prototype.addItem = function(i) {
      this.renderItems.push(i);
      return this.scene.add(i);
    };

    FreeFlightState.prototype.addRemoveItem = function(i) {
      var index;
      index = this.renderItems.indexOf(i);
      if (index !== -1) {
        this.renderItems.splice(index, 1);
        return this.scene.remove(i);
      }
    };

    FreeFlightState.prototype.begin = function() {
      var cube, directionalLight, geometry, i, material, _i, _results;
      directionalLight = new THREE.DirectionalLight(0xffffff, 1);
      directionalLight.position.set(0.5, 1, 1);
      this.addItem(directionalLight);
      directionalLight = new THREE.DirectionalLight(0x778899, 0.4);
      directionalLight.position.set(-0.5, -1, 1);
      this.addItem(directionalLight);
      geometry = new THREE.CubeGeometry(1, 1, 1);
      material = new THREE.MeshLambertMaterial({
        color: 0x334455
      });
      _results = [];
      for (i = _i = 0; _i < 25; i = ++_i) {
        cube = new THREE.Mesh(geometry, material);
        this.scene.add(cube);
        cube.position.y = Math.random() * 3;
        cube.position.z = Math.random() * 3;
        cube.position.x = Math.random() * 3;
        _results.push(this.addItem(cube));
      }
      return _results;
    };

    FreeFlightState.prototype.end = function() {
      var self;
      self = this;
      return self.renderItems.forEach(function(i) {
        return self.scene.remove(i);
      });
    };

    FreeFlightState.prototype.update = function(deltaTime) {
      var c, i, self, _i, _len, _ref, _results;
      self = this;
      i = 0;
      _ref = self.renderItems;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        c = _ref[_i];
        c.rotation.x += 0.01 + (i += 0.0003);
        c.rotation.y += 0.01 + (i += 0.00003);
        c.rotation.z += 0.01 + (i += 0.00003);
        c.position.x += 0.01 + (Math.sin(i += 0.00003));
        c.position.y += 0.01 + (Math.sin(i += 0.00003));
        _results.push(c.position.z += 0.01 + (Math.sin(i += 0.00003)));
      }
      return _results;
    };

    return FreeFlightState;

  })();

}).call(this);
